
import static java.lang.System.exit;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.RowFilter;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Zak
 */
public class SecView extends javax.swing.JFrame {
 Connection con;
    Statement stmt;
    ResultSet rs;
    int curRow=0;
    /**
     * Creates new form SecView
     */
    public SecView() {
        initComponents();
        DoConnect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        First = new javax.swing.JTextField();
        Last = new javax.swing.JTextField();
        Ailment = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Room = new javax.swing.JTextField();
        PID = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        search = new javax.swing.JTextField();
        search1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Patient List");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("First:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Last:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Ailment:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Room No:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("PID:");

        jButton4.setText("Exit");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        btnFirst.setText("First");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrevious.setText("Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        btnLast.setText("Last");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.setEnabled(false);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        search.setText("FirstNameToSearch");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
        });

        search1.setText("LastNameToSearch");
        search1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search1ActionPerformed(evt);
            }
        });
        search1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                search1KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(756, 756, 756)
                        .addComponent(jLabel1)
                        .addGap(0, 98, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(btnFirst)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnNext)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6))
                                .addGap(1, 1, 1)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Last, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Ailment, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(First, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Room, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(btnPrevious)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnLast))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(PID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(282, 282, 282)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(search, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                    .addComponent(search1))
                .addGap(335, 335, 335))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(597, 597, 597)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addGap(18, 18, 18)
                        .addComponent(btnNew)
                        .addGap(18, 18, 18)
                        .addComponent(btnSave)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(First, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Last, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Ailment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(Room, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFirst)
                    .addComponent(btnNext)
                    .addComponent(btnPrevious)
                    .addComponent(btnLast))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnNew)
                    .addComponent(btnSave)
                    .addComponent(btnCancel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 349, Short.MAX_VALUE)
                .addComponent(jButton4))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
exit(1);         // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
     try {
if ( rs.next( ) ) {
int id_p=rs.getInt("PID");
      String pid=Integer.toString(id_p);
      String FirstNP=rs.getString("FIRSTP");
      String LastNP=rs.getString("LASTP");
      String Pailment=rs.getString("AILMENT");
    //  String PDoctor=rs.getString("DOCTOR");
      int PRoom=rs.getInt("ROOMNO");
      String paroom=Integer.toString(PRoom);
      PID.setText(pid);
      First.setText(FirstNP);
      Last.setText(LastNP);
      Ailment.setText(Pailment);
     // Doctor.setText(PDoctor);
      Room.setText(paroom);
}
else {
rs.previous( );
JOptionPane.showMessageDialog(this, "End of File");
}
}
catch (SQLException err) {
JOptionPane.showMessageDialog(this, err.getMessage());
}
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
 try {
if ( rs.previous( ) ) {
int id_p=rs.getInt("PID");
      String pid=Integer.toString(id_p);
      String FirstNP=rs.getString("FIRSTP");
      String LastNP=rs.getString("LASTP");
      String Pailment=rs.getString("AILMENT");
   //   String PDoctor=rs.getString("DOCTOR");
      int PRoom=rs.getInt("ROOMNO");
      String paroom=Integer.toString(PRoom);
      PID.setText(pid);
      First.setText(FirstNP);
      Last.setText(LastNP);
      Ailment.setText(Pailment);
     // Doctor.setText(PDoctor);
      Room.setText(paroom);
}
else {
rs.next( );
JOptionPane.showMessageDialog(this, "Start of File");
}
}
catch (SQLException err) {
JOptionPane.showMessageDialog(this, err.getMessage());
}        // TODO add your handling code here:
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
try {
    rs.first();
int id_p=rs.getInt("PID");
      String pid=Integer.toString(id_p);
      String FirstNP=rs.getString("FIRSTP");
      String LastNP=rs.getString("LASTP");
      String Pailment=rs.getString("AILMENT");
    //  String PDoctor=rs.getString("DOCTOR");
      int PRoom=rs.getInt("ROOMNO");
      String paroom=Integer.toString(PRoom);
      PID.setText(pid);
      First.setText(FirstNP);
      Last.setText(LastNP);
      Ailment.setText(Pailment);
     // Doctor.setText(PDoctor);
      Room.setText(paroom);
              }
catch (SQLException err) {
JOptionPane.showMessageDialog(this, err.getMessage());
} 
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
try {
    rs.last();
int id_p=rs.getInt("PID");
      String pid=Integer.toString(id_p);
      String FirstNP=rs.getString("FIRSTP");
      String LastNP=rs.getString("LASTP");
      String Pailment=rs.getString("AILMENT");
     // String PDoctor=rs.getString("DOCTOR");
      int PRoom=rs.getInt("ROOMNO");
      String paroom=Integer.toString(PRoom);
      PID.setText(pid);
      First.setText(FirstNP);
      Last.setText(LastNP);
      Ailment.setText(Pailment);
     // Doctor.setText(PDoctor);
      Room.setText(paroom);
              }
catch (SQLException err) {
JOptionPane.showMessageDialog(this, err.getMessage());
}         // TODO add your handling code here:
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
     String PaID=PID.getText();
      String first=First.getText();
      String last=Last.getText();
      String ailment=Ailment.getText();
    // String doctor= Doctor.getText();
      String room=Room.getText();
        int newPid=Integer.parseInt(PaID);
        int newRoom=Integer.parseInt(room);
        try {
            rs.updateInt("PID", newPid);
            rs.updateString("FIRSTP",first);
            rs.updateString("LASTP",last);
            rs.updateString("AILMENT",ailment);
         //   rs.updateString("DOCTOR",doctor);
            rs.updateInt("ROOMNO",newRoom);
            rs.updateRow();
            JOptionPane.showMessageDialog(this, "Updated");
        } catch (SQLException err) {
JOptionPane.showMessageDialog(this, err.getMessage());
}   
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
     Random randomGenerator = new Random();
    
      int randomInt = randomGenerator.nextInt(9999);
      int randomInt2 = randomGenerator.nextInt(999);
      String id=Integer.toString(randomInt);
      String roomno=Integer.toString(randomInt2);
      
        try {
         curRow = rs.getRow( );
     
  PID.setText(id);
      First.setText("");
      Last.setText("");
      Ailment.setText("");
    //  Doctor.setText("2BeDetermined");
      Room.setText(roomno);      
        
        btnFirst.setEnabled( false );
btnPrevious.setEnabled( false ) ;
btnNext.setEnabled( false );
btnLast.setEnabled( false );
btnUpdate.setEnabled( false );
btnDelete.setEnabled( false );
btnNew.setEnabled( false );
btnSave.setEnabled( true );
btnCancel.setEnabled( true ); 
} catch (SQLException ex) {
         Logger.getLogger(SecView.class.getName()).log(Level.SEVERE, null, ex);
     }// TODO add your handling code here:
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
try {
    rs.absolute(curRow);
      PID.setText(Integer.toString(rs.getInt("PID")));
      First.setText(rs.getString("FIRSTP"));
      Last.setText(rs.getString("LASTP"));
      Ailment.setText(rs.getString("AILMENT"));
     // Doctor.setText(rs.getString("DOCTOR"));
      Room.setText(Integer.toString(rs.getInt("ROOMNO")));      
} catch (SQLException ex) {
         Logger.getLogger(SecView.class.getName()).log(Level.SEVERE, null, ex);
     }
        
        btnFirst.setEnabled( true );
btnPrevious.setEnabled( true ) ;
btnNext.setEnabled( true );
btnLast.setEnabled( true );
btnUpdate.setEnabled( true );
btnDelete.setEnabled( true );
btnNew.setEnabled( true );

btnSave.setEnabled( false );
btnCancel.setEnabled( false );        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String PaID= PID.getText();
      String first=First.getText();
      String last=Last.getText();
      String ailment=Ailment.getText();
    // String doctor= Doctor.getText();
      String room=Room.getText();
        int newPid=Integer.parseInt(PaID);
        int newRoom=Integer.parseInt(room);
        
        try {
    
    String host="jdbc:derby://localhost:1527/Login";
        String uName="test";
        String uPass="test";
   Connection con=DriverManager.getConnection(host,uName,uPass);
    rs.moveToInsertRow();
    rs.updateInt("PID", newPid);
            rs.updateString("FIRSTP",first);
            rs.updateString("LASTP",last);
            rs.updateString("AILMENT",ailment);
//            rs.updateString("DOCTOR",doctor);
            rs.updateInt("ROOMNO",newRoom);
             rs.insertRow( );
stmt.close();
rs.close();
stmt=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE );
String SQL="SELECT * FROM PATIENT";
      rs=stmt.executeQuery( SQL );
      rs.next();
      int id_p=rs.getInt("PID");
      String pid=Integer.toString(id_p);
      String FirstNP=rs.getString("FIRSTP");
      String LastNP=rs.getString("LASTP");
      String Pailment=rs.getString("AILMENT");
     // String PDoctor=rs.getString("DOCTOR");
      int PRoom=rs.getInt("ROOMNO");
      String paroom=Integer.toString(PRoom);
      PID.setText(pid);
      First.setText(FirstNP);
      Last.setText(LastNP);
      Ailment.setText(Pailment);
      //Doctor.setText(PDoctor);
      Room.setText(paroom);
      JOptionPane.showMessageDialog(this,"Record Saved");
btnNext.setEnabled(true);
btnFirst.setEnabled( true );
       btnPrevious.setEnabled( true ) ;
       btnLast.setEnabled( true );
        btnUpdate.setEnabled( true );
    btnDelete.setEnabled( true );
btnNew.setEnabled( true );
}
catch (SQLException err) {
    JOptionPane.showMessageDialog(this,err.getMessage());
} 
    
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try{
            String host="jdbc:derby://localhost:1527/Login";
        String uName="test";
        String uPass="test";
   Connection con=DriverManager.getConnection(host,uName,uPass);
  // con.setAutoCommit(false);
        rs.deleteRow( );
stmt.close();
rs.close( );
stmt=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE );
String SQL="SELECT * FROM PATIENT";
      rs=stmt.executeQuery( SQL );
      rs.next();
      int id_p=rs.getInt("PID");
      String pid=Integer.toString(id_p);
      String FirstNP=rs.getString("FIRSTP");
      String LastNP=rs.getString("LASTP");
      String Pailment=rs.getString("AILMENT");
    //  String PDoctor=rs.getString("DOCTOR");
      int PRoom=rs.getInt("ROOMNO");
      String paroom=Integer.toString(PRoom);
      PID.setText(pid);
      First.setText(FirstNP);
      Last.setText(LastNP);
      Ailment.setText(Pailment);
     // Doctor.setText(PDoctor);
      Room.setText(paroom);
      JOptionPane.showMessageDialog(this,"Record Deleted");
        }
      catch (SQLException err) {
    JOptionPane.showMessageDialog(this,err.getMessage());
} 
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
    
    }//GEN-LAST:event_searchActionPerformed

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
    try{
       
            String sql2 = "select * from PATIENT where FIRSTP=?"  ;
        PreparedStatement pst = con.prepareStatement(sql2);
        pst.setString(1,search.getText());
          ResultSet  rs1 = pst.executeQuery();  
          stmt=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            if(rs1.next()) {
       int id_p=rs1.getInt("PID");
      String pid=Integer.toString(id_p);
      String FirstNP=rs1.getString("FIRSTP");
      String LastNP=rs1.getString("LASTP");
      String Pailment=rs1.getString("AILMENT");
     // String PDoctor=rs.getString("DOCTOR");
      int PRoom=rs1.getInt("ROOMNO");
      String paroom=Integer.toString(PRoom);  
       PID.setText(pid);
      First.setText(FirstNP);
      Last.setText(LastNP);
      Ailment.setText(Pailment);
     // Doctor.setText(PDoctor);
      Room.setText(paroom);
            }
        }
      catch (SQLException err) {
    JOptionPane.showMessageDialog(this,err.getMessage());
} 
    }//GEN-LAST:event_searchKeyReleased

    private void search1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_search1ActionPerformed

    private void search1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search1KeyReleased
 try{
       
            String sql2 = "select * from PATIENT where LASTP=?"  ;
        PreparedStatement pst = con.prepareStatement(sql2);
        pst.setString(1,search1.getText());
          ResultSet  rs1 = pst.executeQuery();  
          stmt=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            if(rs1.next()) {
       int id_p=rs1.getInt("PID");
      String pid=Integer.toString(id_p);
      String FirstNP=rs1.getString("FIRSTP");
      String LastNP=rs1.getString("LASTP");
      String Pailment=rs1.getString("AILMENT");
     // String PDoctor=rs.getString("DOCTOR");
      int PRoom=rs1.getInt("ROOMNO");
      String paroom=Integer.toString(PRoom);  
       PID.setText(pid);
      First.setText(FirstNP);
      Last.setText(LastNP);
      Ailment.setText(Pailment);
     // Doctor.setText(PDoctor);
      Room.setText(paroom);
            }
        }
      catch (SQLException err) {
    JOptionPane.showMessageDialog(this,err.getMessage());
}         // TODO add your handling code here:
    }//GEN-LAST:event_search1KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SecView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SecView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SecView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SecView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SecView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Ailment;
    private javax.swing.JTextField First;
    private javax.swing.JTextField Last;
    public javax.swing.JTextField PID;
    public javax.swing.JTextField Room;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField search;
    private javax.swing.JTextField search1;
    // End of variables declaration//GEN-END:variables

    private void DoConnect() {
       try {
     String host="jdbc:derby://localhost:1527/Login";
        String uName="test";
        String uPass="test";
      con=DriverManager.getConnection(host,uName,uPass);
     
      stmt=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
      
      String SQL="SELECT * FROM PATIENT";
      rs=stmt.executeQuery( SQL );
      rs.next();
      int id_p=rs.getInt("PID");
      String pid=Integer.toString(id_p);
      String FirstNP=rs.getString("FIRSTP");
      String LastNP=rs.getString("LASTP");
      String Pailment=rs.getString("AILMENT");
     // String PDoctor=rs.getString("DOCTOR");
      int PRoom=rs.getInt("ROOMNO");
      String paroom=Integer.toString(PRoom);
      PID.setText(pid);
      First.setText(FirstNP);
      Last.setText(LastNP);
      Ailment.setText(Pailment);
     // Doctor.setText(PDoctor);
      Room.setText(paroom);
      
      }
        
         catch (SQLException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
